[["index.html", "worflow DSFB Chapter 1 Lesson 1 Git and GitHub", " worflow DSFB alena savacehnko 2024-12-29 Chapter 1 Lesson 1 Git and GitHub So, you will have at least 3 R projects (file –&gt; new project…) going on this semester: one for all the regular exercises in the lessons. One for your portfolio. A third one for projecticum. We suggest to call them: dsfb2_workflows_exercises dsfb2_workflows_portfolio dsfb2_research_project Create a new Git repository on GitHub. Make sure that the Git repository contains a gitignore file for R. Clone the Git repository to your computer using RStudio (hence creating an R Project on the fly). Commit the changes to the Git repository and push the changes to GitHub. Check the commit on GitHub to inspect the file changes. Add some extra lines to the RMarkdown file and change the title. Commit the changes and push the changes to GitHub. Check the commit on GitHub to inspect the file changes. Link to repositories: dsfb2_research_project dsfb2_workflows_exercises dsfb2_workflows_portfolio Exercise 1.3, Exercise 1.4 Clone &amp; commit Clone the Git repository that you created on GitHub (the same one again) to a folder on your computer using the command line. Change the RMarkdown file. Check the changes using git status. What do you see? Commit your changes and push the changes to GitHub using the command line git log for actuel moment 18 november. "],["agile-collaboration.html", "Chapter 2 Agile collaboration", " Chapter 2 Agile collaboration Lesson 2. Git conflict. Lesson 2. Git conflict. Change 2 lines in your README.md locally (on your own computer) Create one commit for each change: Select the changes you want to commit and click commit Add a commit message and click Commit Do NOT push (yet) Lesson 2. Exercise 2.1 Create a new branch in RStudio. Modify the markdown file by adding some additional text. Save the changes and commit/push the changes to GitHub. Go to GitHub and try to find the commits of the new branch. In RStudio, change to the main branch. What happens to your recent changes in your RMarkdown file? What happens if you change to your development branch? Merge your changes with the main branch by creating and resolving a pull request. In RStudio, switch to the main branch and pull your changes. Does the RMarkdown file now have the changes? Delete the local development branch using the command line. Exercise 2 Projecticum repository Create one shared Git repository on GitHub for your Projecticum project. The teachers have created a projecticum organisation on github, make sure you make your repository within this organisation. Also make sure that the repository is shared and that your group member(s) can contribute. Subsequently, clone the GitHub repository to your computer and add your files using a development branch. Now Commit/push the changes and add the files to the main branch with a pull request. Try working on the same files at the same time in separate branches, and merge your branches to the main branch. Solve the issues you encounter. Try both renaming a file and merge your branches to the main branch. Solve any issues you encounter. git clone https://github.com/ProjecticumDataScience/minion_seq.git projecticum ProjecticumDataScience Exercise 2.3 Study the Github Flow Documentation site mentioned above. Discuss it with your Projecticum partner. See to it that you two really understand all the steps of the flow mentioned in the documentation. Git documentation https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/ Plan for vrije opdracht 1-2 dagen , orienteren, data zoeken 2-3 dagen implementatie , testen, rappoartage 140 uren workflow 32 vrije opdracht Exercise 2 Github documentation Study the github documentation on “Project Boards” here Setup a github project for your projecticum in your github account. Use the repo within the projecticum organisation, Link this repo to the github project you just created. link for proejcticum dashboard: https://github.com/orgs/ProjecticumDataScience/projects/36/views/2 dashboard To complete this exercise, you need to complete the following steps: Create at least 1 milestones for the first sprint of your projecticum project Create a number of issues that need to be resolved for these 2 milestones to be completed (link these issue to the appropriate milestone you created in the previous step) Remember: a good issue is so small that it can be tackled in approximately a day’s work or less! If you find you have little issues to solve yet for the projecticum, discuss with your partner and add more issues. An issue can basically be anything, but here we mean something than can be commited to a repo, such as a piece of code, a new .bib file, a dataset or documentation. Put these issues on the Kanban board in the ‘In progress’ column Each of you chooses a small issue to work on now. Choose issues that you think you could solve in max. 60 minutes for this assignment. Create branch for both (or all three) issues. You can choose to work on the same issue if you prefer, but we would recommend still making two branches and have github do the merging for you. Synchronize you local branches in RStudio, with the remote branches Switch to a branch of the issue you want to work on Start working and solving an issue (or spend max. 60 minutes working on it) Commit your changes, first to you local issue-branch, than push the commit to the remote (remember to use the ‘fixes #’ phrase in your commit if you fixed it) Create a pull request to the main branch Merge the pull request into main Observe what happened on the Kanban board. Where did the issue you just resolved land? What happened to the milestone? Delete the branch related to the issue you just resolved Kanban board dashboard create-milistone create-branch-for-milistone Exercise 2.12 Exercise 2 Transform your portfolio to a local bookdown site During this course you will collect .Rmd files with the different portfolio exercises. If everything went well, you have these files collected in your portfolio RStudio project, linked to a Github repo. Using the minimal example bookdown as a template, make a folder (locally) that contains a index.Rmd file that will act as the home page for your portfolio. Start by rendering your project using bookdown::render_book() to see if it works. Add any portfolio .Rmd files you already generated to the folder. You can arrange the chapters by using file names like 001_&lt;file_name&gt;.Rmd. When you have build your index.Rmd file and have collected all files in the root of your project, be sure all depending data, scripts and other files such as images etc. are also present in the project. Use the guerrilla analytics logic to setup the project structure if you lost track of it. Set the option new_session: yes in your _bookdown.yml or index.Rmd file. This prevent problems down the line. Render the book until all errors are solved. You can debug each file and error by looking at the line numbers where the rendering is causing problems. bookdown::render_book(&quot;.&quot;) "],["data-managment-principles.html", "Chapter 3 Data managment principles", " Chapter 3 Data managment principles Imagine you receive a file attached to an email from a researcher in your research group called: salmonella CFU kinetics OD600 in LB van ipecs 8okt2020 kleur.xlsx The file is located in the course ./data folder. Download it here. You are requested to run an analysis on the raw data in this file (sheet named ‘All Cycles’). It contains data from a plate reader experiment where wells are measured over time. The researcher asks you to generate a plot per sample. No other information was provided in the original email. Describe the following steps in an RMarkdown file. You do not need to write the R code for the actual analysis at this point - we will do that later in another exercise in this lesson. Answer these questions in your markdown file with exercises. How would you prepare for this analysis in R/Rstudio? Look at the contents of the file, which Excel Worksheet do you need for the analysis? Which steps do you need to take to load the data into R Which steps do you need to take in reshaping the file to make the dataformat match the requirement for using `{ggplot} Think of a better file name Write a conceptual and kind and friendly, but clear reply email (in English) to the researcher, where you address the changes that the researcher needs to make to the file in order for you to be able to analyze this data in R. Set meeting per sample per data point in apart column. There are actually 4 very similar files lying around. Download the data here. Find out which one is different from the other three using their MD5sums. If you want, md5sum can handle multiple files at the same time, but wants full paths for all of them. library(&quot;tidyverse&quot;) ## ── Attaching core tidyverse packages ──── ## ✔ dplyr 1.1.4 ✔ readr 2.1.5 ## ✔ forcats 1.0.0 ✔ stringr 1.5.1 ## ✔ ggplot2 3.5.1 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.3 ✔ tidyr 1.3.1 ## ✔ purrr 1.0.2 ## ── Conflicts ─── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors myDir &lt;- here::here( &quot;data-raw&quot;, &quot;md5_examples&quot;) fileNames &lt;- list.files(myDir, recursive = TRUE) tools::md5sum(file.path(myDir, fileNames)) %&gt;% enframe() -&gt; md5sums_all md5sums_all$filename &lt;- fileNames md5sums_all %&gt;% select(filename,value) ## # A tibble: 4 × 2 ## filename value ## &lt;chr&gt; &lt;chr&gt; ## 1 MD5_exampledata_1.txt f3d2eeb79b4c24490bf08f483e5cadd3 ## 2 MD5_exampledata_backupcomputercrash.txt f3d2eeb79b4c24490bf08f483e5cadd3 ## 3 MD5_exampledata_maybethisone.txt a331f23fd3586f0100173bd28b1e319c ## 4 MD5_exampledata_savethisone.txt f3d2eeb79b4c24490bf08f483e5cadd3 Determine the md5sums of the file. Save the checksums to a file [write a piece of R code] # calculate md5sums for file &quot;toxrefdb_nel_lel_noael_loael_summary_AUG2014_FOR_PUBLIC_RELEASE.csv&quot; tools::md5sum( here::here( &quot;data&quot;, &quot;toxrefdb_nel_lel_noael_loael_summary_AUG2014_FOR_PUBLIC_RELEASE.csv&quot; ) ) %&gt;% enframe() -&gt; md5sums_toxref md5sums_toxref %&gt;% # write as dataframe for easy access readr::write_csv( here::here( &quot;data&quot;, &quot;toxrefdb_nel_lel_noael_loael_summary_AUG2014_FOR_PUBLIC_RELEASE.md5&quot;) ) Download the md5 file you just generated on the server (or upload the one you generated locally). Can you think of a way to check in an R script whether they are the same? Write the script and save it in a .R file # calculate md5sums for file &quot;toxrefdb_nel_lel_noael_loael_summary_AUG2014_FOR_PUBLIC_RELEASE.csv&quot; tools::md5sum( here::here( &quot;data&quot;, &quot;toxrefdb_nel_lel_noael_loael_summary_AUG2014_FOR_PUBLIC_RELEASE.csv&quot; ) ) %&gt;% enframe() -&gt; md5sums_toxref md5sums_toxref %&gt;% # write as dataframe for easy access readr::write_csv( here::here( &quot;data&quot;, &quot;toxrefdb_nel_lel_noael_loael_summary_AUG2014_FOR_PUBLIC_RELEASE.md5&quot;) ) Now look at your last laboratory project and take a look at your folder structure. Clean it! fs::dir_tree(here::here(&quot;data-raw&quot;)) ## C:/Users/Mijn-PC/Documents/r/r/worfklow_ds_2/data-raw ## ├── 13059_2016_1044_MOESM1_ESM.xlsx ## ├── install.R ## ├── md5_examples ## │ ├── MD5_exampledata_1.txt ## │ ├── MD5_exampledata_backupcomputercrash.txt ## │ ├── MD5_exampledata_maybethisone.txt ## │ └── MD5_exampledata_savethisone.txt ## ├── md5_examples.zip ## ├── MinionBenchmarkPaper.pdf ## ├── salmonella CFU kinetics OD600 in LB van ipecs 8okt2020 kleur.xlsx ## ├── SupplementaryFiles ## │ ├── media-1 (1).xlsx ## │ ├── media-2 (2).xlsx ## │ ├── media-3 (1).xlsx ## │ ├── media-4 (1).xlsx ## │ └── media-5 (1).xlsx ## ├── toxrefdb_nel_lel_noael_loael_summary_AUG2014_FOR_PUBLIC_RELEASE.csv ## └── ~$salmonella CFU kinetics OD600 in LB van ipecs 8okt2020 kleur.xlsx Download it here if you’ve lost it and take a good look at your file management… Go over the following steps to complete this exercise. Review your answers to the previous exercise where we used this file in this lesson. Try reading the sheet called All Cycles in the Excel file. What goes wrong with the formatting of the data if you start reading in the data from cell A1? Try solving this problem. What shape of formatting would you say this data is in? Is the data tidy? Write a piece of code that creates a tidy format of this data. You also need to take a look a the sheet called layout to get information on the samples. Try generating a manual data frame that has 96 rows and a code for each sample. The experiment has been performed in duplo, so for each experimental condition there are two samples. Now join your sample data dataframe to the raw data. Export the data as a .csv file. Write an appropriate README.txt file that accompanies this exported csv file. Save both in your data folder of your course project. (make this folder if you don’t have it yet). library(readxl) data_platereader &lt;- read_xlsx( here::here( &quot;data-raw&quot;, &quot;salmonella CFU kinetics OD600 in LB van ipecs 8okt2020 kleur.xlsx&quot; ), sheet = &quot;All Cycles&quot; ) ## New names: ## • `` -&gt; `...2` ## • `` -&gt; `...3` ## • `` -&gt; `...4` ## • `` -&gt; `...5` ## • `` -&gt; `...6` ## • `` -&gt; `...7` ## • `` -&gt; `...8` ## • `` -&gt; `...9` ## • `` -&gt; `...10` ## • `` -&gt; `...11` ## • `` -&gt; `...12` ## • `` -&gt; `...13` ## • `` -&gt; `...14` ## • `` -&gt; `...15` ## • `` -&gt; `...16` ## • `` -&gt; `...17` ## • `` -&gt; `...18` ## • `` -&gt; `...19` ## • `` -&gt; `...20` ## • `` -&gt; `...21` ## • `` -&gt; `...22` ## • `` -&gt; `...23` ## • `` -&gt; `...24` ## • `` -&gt; `...25` ## • `` -&gt; `...26` ## • `` -&gt; `...27` ## • `` -&gt; `...28` ## • `` -&gt; `...29` ## • `` -&gt; `...30` ## • `` -&gt; `...31` ## • `` -&gt; `...32` ## • `` -&gt; `...33` ## • `` -&gt; `...34` ## • `` -&gt; `...35` ## • `` -&gt; `...36` ## • `` -&gt; `...37` ## • `` -&gt; `...38` ## • `` -&gt; `...39` ## • `` -&gt; `...40` ## • `` -&gt; `...41` ## • `` -&gt; `...42` ## • `` -&gt; `...43` ## • `` -&gt; `...44` ## • `` -&gt; `...45` ## • `` -&gt; `...46` ## • `` -&gt; `...47` ## • `` -&gt; `...48` ## • `` -&gt; `...49` ## • `` -&gt; `...50` ## • `` -&gt; `...51` ## • `` -&gt; `...52` ## • `` -&gt; `...53` ## • `` -&gt; `...54` ## • `` -&gt; `...55` ## • `` -&gt; `...56` ## • `` -&gt; `...57` ## • `` -&gt; `...58` ## • `` -&gt; `...59` ## • `` -&gt; `...60` ## • `` -&gt; `...61` ## • `` -&gt; `...62` ## • `` -&gt; `...63` ## • `` -&gt; `...64` ## • `` -&gt; `...65` ## • `` -&gt; `...66` ## • `` -&gt; `...67` ## • `` -&gt; `...68` ## • `` -&gt; `...69` ## • `` -&gt; `...70` ## • `` -&gt; `...71` ## • `` -&gt; `...72` ## • `` -&gt; `...73` ## • `` -&gt; `...74` ## • `` -&gt; `...75` ## • `` -&gt; `...76` ## • `` -&gt; `...77` ## • `` -&gt; `...78` ## • `` -&gt; `...79` ## • `` -&gt; `...80` ## • `` -&gt; `...81` ## • `` -&gt; `...82` ## • `` -&gt; `...83` ## • `` -&gt; `...84` ## • `` -&gt; `...85` ## • `` -&gt; `...86` ## • `` -&gt; `...87` ## • `` -&gt; `...88` ## • `` -&gt; `...89` ## • `` -&gt; `...90` ## • `` -&gt; `...91` ## • `` -&gt; `...92` ## • `` -&gt; `...93` ## • `` -&gt; `...94` ## • `` -&gt; `...95` ## • `` -&gt; `...96` ## • `` -&gt; `...97` ## • `` -&gt; `...98` ## • `` -&gt; `...99` ## • `` -&gt; `...100` ## • `` -&gt; `...101` ## • `` -&gt; `...102` ## • `` -&gt; `...103` ## • `` -&gt; `...104` ## • `` -&gt; `...105` ## • `` -&gt; `...106` ## • `` -&gt; `...107` ## • `` -&gt; `...108` ## • `` -&gt; `...109` ## • `` -&gt; `...110` ## • `` -&gt; `...111` ## • `` -&gt; `...112` ## • `` -&gt; `...113` ## • `` -&gt; `...114` ## • `` -&gt; `...115` ## • `` -&gt; `...116` ## • `` -&gt; `...117` ## • `` -&gt; `...118` ## • `` -&gt; `...119` ## • `` -&gt; `...120` ## • `` -&gt; `...121` ## • `` -&gt; `...122` ## • `` -&gt; `...123` ## • `` -&gt; `...124` ## • `` -&gt; `...125` ## • `` -&gt; `...126` ## • `` -&gt; `...127` ## • `` -&gt; `...128` ## • `` -&gt; `...129` ## • `` -&gt; `...130` ## • `` -&gt; `...131` ## • `` -&gt; `...132` ## • `` -&gt; `...133` ## • `` -&gt; `...134` ## • `` -&gt; `...135` ## • `` -&gt; `...136` ## • `` -&gt; `...137` ## • `` -&gt; `...138` ## • `` -&gt; `...139` ## • `` -&gt; `...140` ## • `` -&gt; `...141` ## • `` -&gt; `...142` ## • `` -&gt; `...143` ## • `` -&gt; `...144` ## • `` -&gt; `...145` ## • `` -&gt; `...146` ## • `` -&gt; `...147` ## • `` -&gt; `...148` ## • `` -&gt; `...149` ## • `` -&gt; `...150` ## • `` -&gt; `...151` ## • `` -&gt; `...152` ## • `` -&gt; `...153` ## • `` -&gt; `...154` ## • `` -&gt; `...155` ## • `` -&gt; `...156` ## • `` -&gt; `...157` ## • `` -&gt; `...158` ## • `` -&gt; `...159` ## • `` -&gt; `...160` ## • `` -&gt; `...161` ## • `` -&gt; `...162` ## • `` -&gt; `...163` ## • `` -&gt; `...164` ## • `` -&gt; `...165` ## • `` -&gt; `...166` ## • `` -&gt; `...167` ## • `` -&gt; `...168` ## • `` -&gt; `...169` ## • `` -&gt; `...170` ## • `` -&gt; `...171` ## • `` -&gt; `...172` ## • `` -&gt; `...173` ## • `` -&gt; `...174` ## • `` -&gt; `...175` ## • `` -&gt; `...176` ## • `` -&gt; `...177` ## • `` -&gt; `...178` ## • `` -&gt; `...179` ## • `` -&gt; `...180` ## • `` -&gt; `...181` ## • `` -&gt; `...182` ## • `` -&gt; `...183` ## • `` -&gt; `...184` ## • `` -&gt; `...185` ## • `` -&gt; `...186` ## • `` -&gt; `...187` ## • `` -&gt; `...188` ## • `` -&gt; `...189` ## • `` -&gt; `...190` ## • `` -&gt; `...191` ## • `` -&gt; `...192` ## • `` -&gt; `...193` ## • `` -&gt; `...194` ## • `` -&gt; `...195` ## • `` -&gt; `...196` ## • `` -&gt; `...197` ## • `` -&gt; `...198` ## • `` -&gt; `...199` ## • `` -&gt; `...200` ## • `` -&gt; `...201` ## • `` -&gt; `...202` ## • `` -&gt; `...203` ## • `` -&gt; `...204` ## • `` -&gt; `...205` ## • `` -&gt; `...206` ## • `` -&gt; `...207` ## • `` -&gt; `...208` ## • `` -&gt; `...209` ## • `` -&gt; `...210` ## • `` -&gt; `...211` ## • `` -&gt; `...212` ## • `` -&gt; `...213` ## • `` -&gt; `...214` ## • `` -&gt; `...215` ## • `` -&gt; `...216` ## • `` -&gt; `...217` ## • `` -&gt; `...218` ## • `` -&gt; `...219` ## • `` -&gt; `...220` ## • `` -&gt; `...221` ## • `` -&gt; `...222` ## • `` -&gt; `...223` ## • `` -&gt; `...224` ## • `` -&gt; `...225` ## • `` -&gt; `...226` ## • `` -&gt; `...227` ## • `` -&gt; `...228` ## • `` -&gt; `...229` ## • `` -&gt; `...230` ## • `` -&gt; `...231` ## • `` -&gt; `...232` ## • `` -&gt; `...233` ## • `` -&gt; `...234` ## • `` -&gt; `...235` ## • `` -&gt; `...236` ## • `` -&gt; `...237` ## • `` -&gt; `...238` ## • `` -&gt; `...239` ## • `` -&gt; `...240` ## • `` -&gt; `...241` ## • `` -&gt; `...242` ## • `` -&gt; `...243` ## • `` -&gt; `...244` ## • `` -&gt; `...245` ## • `` -&gt; `...246` ## • `` -&gt; `...247` ## • `` -&gt; `...248` ## • `` -&gt; `...249` ## • `` -&gt; `...250` ## • `` -&gt; `...251` ## • `` -&gt; `...252` ## • `` -&gt; `...253` ## • `` -&gt; `...254` ## • `` -&gt; `...255` ## • `` -&gt; `...256` ## • `` -&gt; `...257` ## • `` -&gt; `...258` ## • `` -&gt; `...259` ## • `` -&gt; `...260` ## • `` -&gt; `...261` ## • `` -&gt; `...262` ## • `` -&gt; `...263` ## • `` -&gt; `...264` ## • `` -&gt; `...265` ## • `` -&gt; `...266` ## • `` -&gt; `...267` ## • `` -&gt; `...268` ## • `` -&gt; `...269` ## • `` -&gt; `...270` ## • `` -&gt; `...271` ## • `` -&gt; `...272` ## • `` -&gt; `...273` ## • `` -&gt; `...274` ## • `` -&gt; `...275` ## • `` -&gt; `...276` ## • `` -&gt; `...277` ## • `` -&gt; `...278` ## • `` -&gt; `...279` ## • `` -&gt; `...280` ## • `` -&gt; `...281` ## • `` -&gt; `...282` ## • `` -&gt; `...283` ## • `` -&gt; `...284` ## • `` -&gt; `...285` ## • `` -&gt; `...286` ## • `` -&gt; `...287` ## • `` -&gt; `...288` ## • `` -&gt; `...289` ## • `` -&gt; `...290` ## • `` -&gt; `...291` ## • `` -&gt; `...292` ## this data looks mangled because of several things: # there is some metadata in the top region of the sheet # there is a weird looking headers (two headers?) ## trying skip data_platereader &lt;- read_xlsx( here::here( &quot;data-raw&quot;, &quot;salmonella CFU kinetics OD600 in LB van ipecs 8okt2020 kleur.xlsx&quot; ), sheet = &quot;All Cycles&quot;, skip = 11 ) ## New names: ## • `` -&gt; `...1` ## clean up and fix names data_platereader &lt;- data_platereader %&gt;% rename(sample = Time, well = ...1) %&gt;% janitor::clean_names() ## which wells have data? unique(data_platereader$well) ## [1] &quot;A01&quot; &quot;A02&quot; &quot;A03&quot; &quot;A04&quot; &quot;A05&quot; &quot;A06&quot; &quot;A07&quot; &quot;A08&quot; &quot;A09&quot; &quot;A10&quot; &quot;A11&quot; &quot;A12&quot; ## [13] &quot;B01&quot; &quot;B02&quot; &quot;B03&quot; &quot;B04&quot; &quot;B05&quot; &quot;B06&quot; &quot;B07&quot; &quot;B08&quot; &quot;B09&quot; &quot;B10&quot; &quot;B11&quot; &quot;B12&quot; ## [25] &quot;C01&quot; &quot;C02&quot; &quot;C03&quot; &quot;C04&quot; &quot;C05&quot; &quot;C06&quot; &quot;C07&quot; &quot;C08&quot; &quot;C09&quot; &quot;C10&quot; &quot;C11&quot; &quot;C12&quot; ## [37] &quot;D01&quot; &quot;D02&quot; &quot;D03&quot; &quot;D04&quot; &quot;D05&quot; &quot;D06&quot; &quot;D07&quot; &quot;D08&quot; &quot;D09&quot; &quot;D10&quot; &quot;D11&quot; &quot;D12&quot; ## [49] &quot;E01&quot; &quot;E02&quot; &quot;E03&quot; &quot;E04&quot; &quot;E05&quot; &quot;E06&quot; &quot;E07&quot; &quot;E08&quot; &quot;E09&quot; &quot;E10&quot; &quot;E11&quot; &quot;E12&quot; ## [61] &quot;F01&quot; &quot;F02&quot; &quot;F03&quot; &quot;F04&quot; &quot;F05&quot; &quot;F06&quot; &quot;F07&quot; &quot;F08&quot; &quot;F09&quot; &quot;F10&quot; &quot;F11&quot; &quot;F12&quot; ## [73] &quot;G01&quot; &quot;G02&quot; &quot;G03&quot; &quot;G04&quot; &quot;G05&quot; &quot;G06&quot; &quot;G07&quot; &quot;G08&quot; &quot;G09&quot; &quot;G10&quot; &quot;G11&quot; &quot;G12&quot; ## [85] &quot;H01&quot; &quot;H02&quot; &quot;H03&quot; &quot;H04&quot; &quot;H05&quot; &quot;H06&quot; &quot;H07&quot; &quot;H08&quot; &quot;H09&quot; &quot;H10&quot; &quot;H11&quot; &quot;H12&quot; ## create sample table sample_names &lt;- data_platereader$sample mv_utr_tx100 &lt;- rep(c(&quot;mv&quot;, &quot;mv&quot;, &quot;mv&quot;, &quot;mv&quot;, &quot;untr&quot;, &quot;untr&quot;, &quot;untr&quot;, &quot;untr&quot;, &quot;untr&quot;, &quot;tx100&quot;, &quot;tx100&quot;, &quot;tx100&quot;), times = 8) salmonella &lt;- read_xlsx( here::here( &quot;data-raw&quot;, &quot;salmonella CFU kinetics OD600 in LB van ipecs 8okt2020 kleur.xlsx&quot; ), sheet = &quot;layout&quot;, range = &quot;C5:N13&quot; ) %&gt;% janitor::clean_names() ## New names: ## • `ul sal` -&gt; `ul sal...1` ## • `ul sal` -&gt; `ul sal...2` ## • `ul sal` -&gt; `ul sal...3` ## • `ul sal` -&gt; `ul sal...4` ## • `ul sal` -&gt; `ul sal...5` ## • `ul sal` -&gt; `ul sal...6` ## • `ul sal` -&gt; `ul sal...7` ## • `ul sal` -&gt; `ul sal...8` ## • `ul sal` -&gt; `ul sal...9` ## • `ul sal` -&gt; `ul sal...10` ## • `ul sal` -&gt; `ul sal...11` ## • `ul sal` -&gt; `ul sal...12` # cheack data types map( .x = salmonella, typeof ) ## $ul_sal_1 ## [1] &quot;double&quot; ## ## $ul_sal_2 ## [1] &quot;double&quot; ## ## $ul_sal_3 ## [1] &quot;double&quot; ## ## $ul_sal_4 ## [1] &quot;double&quot; ## ## $ul_sal_5 ## [1] &quot;double&quot; ## ## $ul_sal_6 ## [1] &quot;double&quot; ## ## $ul_sal_7 ## [1] &quot;double&quot; ## ## $ul_sal_8 ## [1] &quot;double&quot; ## ## $ul_sal_9 ## [1] &quot;double&quot; ## ## $ul_sal_10 ## [1] &quot;double&quot; ## ## $ul_sal_11 ## [1] &quot;double&quot; ## ## $ul_sal_12 ## [1] &quot;double&quot; salmonella &lt;- salmonella %&gt;% pivot_longer(ul_sal_1:ul_sal_12, names_to = &quot;plate_column&quot;, values_to = &quot;microliters_bacteria&quot;) ## synthesize to sample table samples &lt;- tibble( well = data_platereader$well, sample = sample_names, condition = mv_utr_tx100, ul_salmonella = salmonella$microliters_bacteria ) ## join sample table with data data_join &lt;- left_join(samples, data_platereader) ## Joining with `by = join_by(well, ## sample)` ## create tidy version data_tidy &lt;- data_join %&gt;% pivot_longer( x0_h:x24_h_5_min, names_to = &quot;time&quot;, values_to = &quot;value&quot; ) ## fix time variable data_tidy_time &lt;- data_tidy %&gt;% mutate(time_var = str_replace_all( string = time, pattern = &quot;x&quot;, replacement = &quot;&quot; )) %&gt;% mutate(time_var = str_replace_all( string = time_var, pattern = &quot;_&quot;, replacement = &quot;&quot; )) %&gt;% mutate(time_var = str_replace_all( string = time_var, pattern = &quot;h&quot;, replacement = &quot;:&quot; )) %&gt;% mutate(time_var = str_replace_all( string = time_var, pattern = &quot;min&quot;, replacement = &quot;&quot; )) %&gt;% separate( col = time_var, into = c(&quot;hours&quot;, &quot;minutes&quot;), remove = FALSE ) %&gt;% mutate( minutes = ifelse(minutes == &quot;&quot;, &quot;0&quot;, minutes) ) %&gt;% mutate(minutes_passed = 60*as.numeric(hours) + as.numeric(minutes)) ## misingness data_tidy %&gt;% naniar::vis_miss() ## graphs data_tidy_time %&gt;% group_by(condition, ul_salmonella, minutes_passed) %&gt;% summarise(mean_value = mean(value)) %&gt;% mutate(ul_salmonella = round(as.numeric(ul_salmonella), 2)) %&gt;% ggplot(aes(x = minutes_passed, y = mean_value)) + geom_line(aes(colour = condition), show.legend = FALSE) + facet_grid(condition ~ ul_salmonella) + xlab(&quot;Time passed (minutes)&quot;) + ylab(&quot;Mean AU&quot;) ## `summarise()` has grouped output by ## &#39;condition&#39;, &#39;ul_salmonella&#39;. You can ## override using the `.groups` argument. "],["reproducible-research.html", "Chapter 4 Reproducible research", " Chapter 4 Reproducible research # install.packages(&quot;devtools&quot;) ## if not already installed devtools::install_github(&quot;uashogeschoolutrecht/toolboxr&quot;) ## Using GitHub PAT from the git credential store. ## Skipping install of &#39;toolboxr&#39; from a github remote, the SHA1 (e43ee4ec) has not changed since last install. ## Use `force = TRUE` to force installation ## load the package library(toolboxr) library(ggplot2) library(tidyverse) library(nlme) ## ## Attaching package: &#39;nlme&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## collapse library(ggsignif) ergo_model &lt;- lme( data = ergoStool, # the data to be used for the model fixed = effort ~ Type, # the dependent and fixed effects variables random = ~1 | Subject # random intercepts for Subject variable ) result &lt;- ergo_model %&gt;% summary() result$tTable %&gt;% as.data.frame() %&gt;% knitr::kable() Value Std.Error DF t-value p-value (Intercept) 8.5555556 0.5760123 24 14.853079 0.0000000 TypeT2 3.8888889 0.5186838 24 7.497610 0.0000001 TypeT3 2.2222222 0.5186838 24 4.284348 0.0002563 TypeT4 0.6666667 0.5186838 24 1.285305 0.2109512 # install.packages(&quot;ggsignif&quot;) ergo_model &lt;- lme( data = ergoStool, # the data to be used for the model fixed = effort ~ Type, # the dependent and fixed effects variables random = ~1 | Subject # random intercepts for Subject variable ) plot_ergo_slopes &lt;- ergoStool %&gt;% ggplot(aes(x = reorder(Type, effort), y = effort)) + geom_jitter(aes(colour = reorder(Subject, -effort)), width = 0.2, size = 3) + geom_smooth(aes(group = Subject, colour = Subject), method = &quot;lm&quot;, se = FALSE) + scale_colour_manual( values = c( &quot;red&quot;,&quot;blue&quot;, &quot;green&quot;, &quot;darkblue&quot;, &quot;darkgreen&quot;, &quot;purple&quot;, &quot;grey&quot;, &quot;black&quot;, &quot;darkgrey&quot;) ) + ylab(&quot;Effort (Borg scale score)&quot;) + xlab(&quot;Chair type&quot;) + guides(colour=guide_legend(title=&quot;Subject id&quot;)) + theme_bw() plot_ergo_slopes ## `geom_smooth()` using formula = &#39;y ~ x&#39; library(ggsignif) p_values &lt;- result$tTable %&gt;% as.data.frame() annotation_df &lt;- data.frame(Type=c(&quot;T1&quot;, &quot;T2&quot;), start=c(&quot;T1&quot;, &quot;T1&quot;), end=c(&quot;T2&quot;, &quot;T3&quot;), y=c(16, 14), label= paste(&quot;p-value:&quot;, c( formatC( p_values$`p-value`[2], digits = 3), formatC( p_values$`p-value`[3], digits = 3) ) ) ) set.seed(123) ergoStool %&gt;% ggplot(aes(x = reorder(Type, effort), y = effort)) + geom_boxplot(colour = &quot;darkgreen&quot;, outlier.shape = NA) + geom_jitter(aes( colour = reorder(Subject, -effort)), width = 0.2, size = 3) + scale_colour_manual( values = c( &quot;red&quot;, &quot;blue&quot;,&quot;green&quot;, &quot;darkblue&quot;, &quot;darkgreen&quot;, &quot;purple&quot;, &quot;grey&quot;, &quot;black&quot;, &quot;darkgrey&quot;)) + ylab(&quot;Effort (Borg scale score)&quot;) + xlab(&quot;Chair type&quot;) + guides(colour=guide_legend(title=&quot;Subject id&quot;)) + ylim(c(6,20)) + geom_signif( data=annotation_df, aes(xmin=start, xmax=end, annotations=label, y_position=y), textsize = 5, vjust = -0.2, manual=TRUE) + theme_bw() -&gt; plot_ergo ## Warning in geom_signif(data = annotation_df, aes(xmin = start, xmax = end, : Ignoring unknown aesthetics: xmin, xmax, ## annotations, and y_position plot_ergo "],["working-with-relational-databases.html", "Chapter 5 Working with relational databases", " Chapter 5 Working with relational databases library(palmerpenguins) library(tidyverse) penguins %&gt;% tidyr::pivot_longer(contains(&quot;_&quot;), # measurement cols names_to = c(&quot;variable_name&quot;), values_to = &quot;value&quot;) ## # A tibble: 1,376 × 6 ## species island sex year variable_name value ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Adelie Torgersen male 2007 bill_length_mm 39.1 ## 2 Adelie Torgersen male 2007 bill_depth_mm 18.7 ## 3 Adelie Torgersen male 2007 flipper_length_mm 181 ## 4 Adelie Torgersen male 2007 body_mass_g 3750 ## 5 Adelie Torgersen female 2007 bill_length_mm 39.5 ## 6 Adelie Torgersen female 2007 bill_depth_mm 17.4 ## 7 Adelie Torgersen female 2007 flipper_length_mm 186 ## 8 Adelie Torgersen female 2007 body_mass_g 3800 ## 9 Adelie Torgersen female 2007 bill_length_mm 40.3 ## 10 Adelie Torgersen female 2007 bill_depth_mm 18 ## # ℹ 1,366 more rows penguins_long &lt;- penguins %&gt;% tidyr::pivot_longer(contains(&quot;_&quot;), # measurement cols names_to = c(&quot;part&quot;, &quot;measure&quot;, &quot;unit&quot;), names_sep = &quot;_&quot;) penguins_long ## # A tibble: 1,376 × 8 ## species island sex year part measure unit value ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Adelie Torgersen male 2007 bill length mm 39.1 ## 2 Adelie Torgersen male 2007 bill depth mm 18.7 ## 3 Adelie Torgersen male 2007 flipper length mm 181 ## 4 Adelie Torgersen male 2007 body mass g 3750 ## 5 Adelie Torgersen female 2007 bill length mm 39.5 ## 6 Adelie Torgersen female 2007 bill depth mm 17.4 ## 7 Adelie Torgersen female 2007 flipper length mm 186 ## 8 Adelie Torgersen female 2007 body mass g 3800 ## 9 Adelie Torgersen female 2007 bill length mm 40.3 ## 10 Adelie Torgersen female 2007 bill depth mm 18 ## # ℹ 1,366 more rows penguins_long %&gt;% tidyr::pivot_wider(names_from = c(&quot;part&quot;, &quot;measure&quot;, &quot;unit&quot;), # pivot these columns values_from = &quot;value&quot;, # take the values from here names_sep = &quot;_&quot;) # combine col names using an underscore ## Warning: Values from `value` are not uniquely ## identified; output will contain ## list-cols. ## • Use `values_fn = list` to suppress ## this warning. ## • Use `values_fn = {summary_fun}` to ## summarise duplicates. ## • Use the following dplyr code to ## identify duplicates. ## {data} |&gt; ## dplyr::summarise(n = dplyr::n(), .by = ## c(species, island, sex, year, part, ## measure, unit)) |&gt; ## dplyr::filter(n &gt; 1L) ## # A tibble: 35 × 8 ## species island sex year bill_length_mm bill_depth_mm flipper_length_mm ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;list&gt; &lt;list&gt; &lt;list&gt; ## 1 Adelie Torgersen male 2007 &lt;dbl [7]&gt; &lt;dbl [7]&gt; &lt;dbl [7]&gt; ## 2 Adelie Torgersen female 2007 &lt;dbl [8]&gt; &lt;dbl [8]&gt; &lt;dbl [8]&gt; ## 3 Adelie Torgersen &lt;NA&gt; 2007 &lt;dbl [5]&gt; &lt;dbl [5]&gt; &lt;dbl [5]&gt; ## 4 Adelie Biscoe female 2007 &lt;dbl [5]&gt; &lt;dbl [5]&gt; &lt;dbl [5]&gt; ## 5 Adelie Biscoe male 2007 &lt;dbl [5]&gt; &lt;dbl [5]&gt; &lt;dbl [5]&gt; ## 6 Adelie Dream female 2007 &lt;dbl [9]&gt; &lt;dbl [9]&gt; &lt;dbl [9]&gt; ## 7 Adelie Dream male 2007 &lt;dbl [10]&gt; &lt;dbl [10]&gt; &lt;dbl [10]&gt; ## 8 Adelie Dream &lt;NA&gt; 2007 &lt;dbl [1]&gt; &lt;dbl [1]&gt; &lt;dbl [1]&gt; ## 9 Adelie Biscoe female 2008 &lt;dbl [9]&gt; &lt;dbl [9]&gt; &lt;dbl [9]&gt; ## 10 Adelie Biscoe male 2008 &lt;dbl [9]&gt; &lt;dbl [9]&gt; &lt;dbl [9]&gt; ## # ℹ 25 more rows ## # ℹ 1 more variable: body_mass_g &lt;list&gt; # give each measured penguin a number penguins_with_id &lt;- penguins %&gt;% mutate(id=seq(nrow(.))) # make the data long again penguins_long_ided &lt;- penguins_with_id %&gt;% tidyr::pivot_longer(contains(&quot;_&quot;), # measurement cols names_to = c(&quot;part&quot;, &quot;measure&quot;, &quot;unit&quot;), names_sep = &quot;_&quot;) # and wide again penguins_long_ided2 &lt;- penguins_long_ided %&gt;% tidyr::pivot_wider(names_from = c(&quot;part&quot;, &quot;measure&quot;, &quot;unit&quot;), values_from = &quot;value&quot;, names_sep = &quot;_&quot;) penguins %&gt;% head() ## # A tibble: 6 × 8 ## species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; ## 1 Adelie Torgersen 39.1 18.7 181 3750 ## 2 Adelie Torgersen 39.5 17.4 186 3800 ## 3 Adelie Torgersen 40.3 18 195 3250 ## 4 Adelie Torgersen NA NA NA NA ## 5 Adelie Torgersen 36.7 19.3 193 3450 ## 6 Adelie Torgersen 39.3 20.6 190 3650 ## # ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt; penguins %&gt;% mutate(penguin_id = row_number(),.before = species) ## # A tibble: 344 × 9 ## penguin_id species island bill_length_mm bill_depth_mm flipper_length_mm ## &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 1 Adelie Torgersen 39.1 18.7 181 ## 2 2 Adelie Torgersen 39.5 17.4 186 ## 3 3 Adelie Torgersen 40.3 18 195 ## 4 4 Adelie Torgersen NA NA NA ## 5 5 Adelie Torgersen 36.7 19.3 193 ## 6 6 Adelie Torgersen 39.3 20.6 190 ## 7 7 Adelie Torgersen 38.9 17.8 181 ## 8 8 Adelie Torgersen 39.2 19.6 195 ## 9 9 Adelie Torgersen 34.1 18.1 193 ## 10 10 Adelie Torgersen 42 20.2 190 ## # ℹ 334 more rows ## # ℹ 3 more variables: body_mass_g &lt;int&gt;, sex &lt;fct&gt;, year &lt;int&gt; food_preference &lt;- tibble( penguin_species = c(&quot;Adelie&quot;, &quot;Chinstrap&quot;, &quot;Gentoo&quot;), favorite_food = c(&quot;peanut butter&quot;, &quot;cheese&quot;, &quot;chocolate&quot;) ) left_join( penguins, food_preference, by = c(&quot;species&quot; = &quot;penguin_species&quot;) ) ## # A tibble: 344 × 9 ## species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; ## 1 Adelie Torgersen 39.1 18.7 181 3750 ## 2 Adelie Torgersen 39.5 17.4 186 3800 ## 3 Adelie Torgersen 40.3 18 195 3250 ## 4 Adelie Torgersen NA NA NA NA ## 5 Adelie Torgersen 36.7 19.3 193 3450 ## 6 Adelie Torgersen 39.3 20.6 190 3650 ## 7 Adelie Torgersen 38.9 17.8 181 3625 ## 8 Adelie Torgersen 39.2 19.6 195 4675 ## 9 Adelie Torgersen 34.1 18.1 193 3475 ## 10 Adelie Torgersen 42 20.2 190 4250 ## # ℹ 334 more rows ## # ℹ 3 more variables: sex &lt;fct&gt;, year &lt;int&gt;, favorite_food &lt;chr&gt; penguins %&gt;% mutate(penguin_id = row_number(),.before = species) ## # A tibble: 344 × 9 ## penguin_id species island bill_length_mm bill_depth_mm flipper_length_mm ## &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 1 Adelie Torgersen 39.1 18.7 181 ## 2 2 Adelie Torgersen 39.5 17.4 186 ## 3 3 Adelie Torgersen 40.3 18 195 ## 4 4 Adelie Torgersen NA NA NA ## 5 5 Adelie Torgersen 36.7 19.3 193 ## 6 6 Adelie Torgersen 39.3 20.6 190 ## 7 7 Adelie Torgersen 38.9 17.8 181 ## 8 8 Adelie Torgersen 39.2 19.6 195 ## 9 9 Adelie Torgersen 34.1 18.1 193 ## 10 10 Adelie Torgersen 42 20.2 190 ## # ℹ 334 more rows ## # ℹ 3 more variables: body_mass_g &lt;int&gt;, sex &lt;fct&gt;, year &lt;int&gt; Let’s refresh your memory. Take the penguins dataset. As we all know, Adelie penguins love peanut butter, Chinstrap penguins prefer cheese and Gentoo penguins do anything for chocolate. Here is a table describing food preference: food_preference &lt;- tibble( penguin_species = c(&quot;Adelie&quot;, &quot;Chinstrap&quot;, &quot;Gentoo&quot;), favorite_food = c(&quot;peanut butter&quot;, &quot;cheese&quot;, &quot;chocolate&quot;) ) joined &lt;- left_join( penguins, food_preference, by = c(&quot;species&quot; = &quot;penguin_species&quot;) ) Now make a new tibble containing only the information on penguin species, sex and bill length measured in 2009 using filter and select. #penguins_long_ided #species island sex year id bill_length_mm bill_depth_mm ##filter(year==&quot;2009&quot;) # species island sex year id bill_length_mm bill_depth_mm head(penguins_long_ided2) ## # A tibble: 6 × 9 ## species island sex year id bill_length_mm bill_depth_mm ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Adelie Torgersen male 2007 1 39.1 18.7 ## 2 Adelie Torgersen female 2007 2 39.5 17.4 ## 3 Adelie Torgersen female 2007 3 40.3 18 ## 4 Adelie Torgersen &lt;NA&gt; 2007 4 NA NA ## 5 Adelie Torgersen female 2007 5 36.7 19.3 ## 6 Adelie Torgersen male 2007 6 39.3 20.6 ## # ℹ 2 more variables: flipper_length_mm &lt;dbl&gt;, body_mass_g &lt;dbl&gt; new_tbl &lt;- penguins_long_ided2 %&gt;% filter(year==2009) %&gt;% select(species,sex,bill_length_mm) head(new_tbl) ## # A tibble: 6 × 3 ## species sex bill_length_mm ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 Adelie female 35 ## 2 Adelie male 41 ## 3 Adelie female 37.7 ## 4 Adelie male 37.8 ## 5 Adelie female 37.9 ## 6 Adelie male 39.7 "],["creating-r-packages.html", "Chapter 6 Creating R packages", " Chapter 6 Creating R packages library(devtools) ## Loading required package: usethis packageVersion(&quot;devtools&quot;) ## [1] &#39;2.4.5&#39; create_package(&quot;~/path/to/regexcite&quot;) use_git() (x &lt;- &quot;alfa,bravo,charlie,delta&quot;) ## [1] &quot;alfa,bravo,charlie,delta&quot; #&gt; [1] &quot;alfa,bravo,charlie,delta&quot; strsplit(x, split = &quot;,&quot;) ## [[1]] ## [1] &quot;alfa&quot; &quot;bravo&quot; &quot;charlie&quot; &quot;delta&quot; str(strsplit(x, split = &quot;,&quot;)) ## List of 1 ## $ : chr [1:4] &quot;alfa&quot; &quot;bravo&quot; &quot;charlie&quot; &quot;delta&quot; unlist(strsplit(x, split = &quot;,&quot;)) ## [1] &quot;alfa&quot; &quot;bravo&quot; &quot;charlie&quot; &quot;delta&quot; strsplit(x, split = &quot;,&quot;)[[1]] ## [1] &quot;alfa&quot; &quot;bravo&quot; &quot;charlie&quot; &quot;delta&quot; strsplit1 &lt;- function(x, split) { strsplit(x, split = split)[[1]] } use_r(&quot;strsplit1&quot;) ## ✔ Setting active project to ## &quot;C:/Users/Mijn-PC/Documents/r/r/worfklow_ds_2&quot;. ## ☐ Edit &#39;R/strsplit1.R&#39;. load_all() (x &lt;- &quot;alfa,bravo,charlie,delta&quot;) ## [1] &quot;alfa,bravo,charlie,delta&quot; strsplit1(x, split = &quot;,&quot;) ## [1] &quot;alfa&quot; &quot;bravo&quot; &quot;charlie&quot; &quot;delta&quot; check() "],["parameterized-reports.html", "Chapter 7 Parameterized reports", " Chapter 7 Parameterized reports rmarkdown::render(&quot;data/params.Rmd&quot;, params = list( year = 2017, region = &quot;Asia&quot; )) ## ## ## processing file: params.Rmd ## | | | 0% | |.......... | 20% | |.................... | 40% [setup] | |............................... | 60% | |......................................... | 80% [unnamed-chunk-84] | |...................................................| 100% ## output file: params.knit.md ## &quot;C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/pandoc&quot; +RTS -K512m -RTS params.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output params.html --lua-filter &quot;C:\\Users\\Mijn-PC\\AppData\\Local\\R\\win-library\\4.3\\rmarkdown\\rmarkdown\\lua\\pagebreak.lua&quot; --lua-filter &quot;C:\\Users\\Mijn-PC\\AppData\\Local\\R\\win-library\\4.3\\rmarkdown\\rmarkdown\\lua\\latex-div.lua&quot; --embed-resources --standalone --variable bs3=TRUE --section-divs --template &quot;C:\\Users\\Mijn-PC\\AppData\\Local\\R\\win-library\\4.3\\rmarkdown\\rmd\\h\\default.html&quot; --no-highlight --variable highlightjs=1 --variable theme=bootstrap --mathjax --variable &quot;mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; --include-in-header &quot;C:\\Users\\Mijn-PC\\AppData\\Local\\Temp\\RtmpKC37go\\rmarkdown-strbd0440fdef.html&quot; ## ## Output created: params.html "],["rmarkdownsyntax.html", "Chapter 8 Rmarkdownsyntax", " Chapter 8 Rmarkdownsyntax Generate a graph with ggplot (any graph you like, here are some examples) and try some options to make it colourblind-friendly. Test your figure here (Export your graph to jpeg using the export option in Rstudio (bottom right, above the graph) or ggsave() and upload the file to this website.) library(tidyverse) library(ggplot2) # Using median mpg %&gt;% mutate(class = fct_reorder(class, hwy, .fun=&#39;median&#39;)) %&gt;% ggplot( aes(x=reorder(class, hwy), y=hwy, fill=class)) + geom_boxplot() + xlab(&quot;class&quot;) + theme(legend.position=&quot;none&quot;) + xlab(&quot;&quot;) # Using number of observation per group mpg %&gt;% mutate(class = fct_reorder(class, hwy, .fun=&#39;length&#39; )) %&gt;% ggplot( aes(x=class, y=hwy, fill=class)) + geom_boxplot() + xlab(&quot;class&quot;) + theme(legend.position=&quot;none&quot;) + xlab(&quot;&quot;) + xlab(&quot;&quot;) .footer { position: absolute; bottom: 0; left: 0; z-index: 10; } .footer { position: absolute; bottom: 0; left: 0; z-index: 10; } "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
